'From Pharo12.0.0SNAPSHOT of 2 December 2024 [Build information: Pharo-12.0.0+SNAPSHOT.build.1544.sha.2132280c015ee49ad1ef4571ff54988be79bd49b (64 Bit)] on 12 July 2025 at 2:24:26.718859 pm'!ClyBrowserCommand subclass: #MyHelloCopyCommand	instanceVariableNames: 'selectedMethod'	classVariableNames: 'DefaultUserName'	package: 'MyTest'!!MyHelloCopyCommand methodsFor: 'accessing' stamp: '7/12/2025 14:21'!defaultMenuItemName	^'*Add My Name & Copy Method*'! !!MyHelloCopyCommand methodsFor: 'accessing' stamp: '7/12/2025 14:23'!"Added by: ken temp on 12 July 2025"execute	| methodName methodContent modifiedContent userName methodClass |	selectedMethod ifNil: [ 		self inform: 'Hello!!!! No method selected'.		^ self ].			methodName := selectedMethod selector.	methodContent := selectedMethod sourceCode.	methodClass := selectedMethod methodClass.		"Get or request user name (stored in class variable)"	userName := DefaultUserName ifNil: [ '' ].	userName := UIManager default 		request: 'Enter your name for the comment:' 		initialAnswer: userName		title: 'Add Name Comment'.		userName isEmptyOrNil ifTrue: [		"If no name provided, just copy without modification"		Clipboard clipboardText: methodContent.		self inform: 'Hello!!!! Copied method contents for: ', methodName asString, ' without modification'.		^ self	].		"Store the name for next time"	DefaultUserName := userName.		"Check if comment already exists to avoid duplicates"	(methodContent includesSubstring: '"Added by: ') ifTrue: [		"Method already has a name comment, ask if user wants to update it"		(UIManager default confirm: 'Method already has a name comment. Replace it?') ifFalse: [			Clipboard clipboardText: methodContent.			self inform: 'Hello!!!! Copied method contents for: ', methodName asString, ' without changes'.			^ self		].		"Remove existing comment (assuming it's the first line)"		methodContent := self removeExistingNameComment: methodContent.	].		"Add comment with name to the top of the method"	modifiedContent := '"Added by: ', userName, ' on ', Date today asString, '"', String cr, methodContent.		"Compile the modified method back into the class"	[ methodClass compile: modifiedContent classified: selectedMethod protocol ]		on: Error do: [ :error |			self inform: 'Error compiling method: ', error messageText.			^ self ].		"Copy the modified content to clipboard"	Clipboard clipboardText: modifiedContent.		"Show friendly message"	self inform: 'Hello!!!! Added your name to method ', methodName asString, ' and copied to clipboard'! !!MyHelloCopyCommand methodsFor: 'accessing' stamp: '7/12/2025 14:23'!removeExistingNameComment: sourceCode	"Remove existing 'Added by:' comment from the beginning of the method"	| lines firstLineRemoved |	lines := sourceCode lines.	lines isEmpty ifTrue: [ ^ sourceCode ].		"Check if first line is a comment with 'Added by:'"	firstLineRemoved := (lines first trimBoth beginsWith: '"Added by:') 		ifTrue: [ 			lines size > 1 				ifTrue: [ (lines allButFirst) joinUsing: String cr ]				ifFalse: [ '' ]		]		ifFalse: [ sourceCode ].		^ firstLineRemoved! !!MyHelloCopyCommand methodsFor: 'execution' stamp: '7/11/2025 23:17'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	selectedMethod := aToolContext lastSelectedMethod.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MyHelloCopyCommand class	instanceVariableNames: ''!!MyHelloCopyCommand class methodsFor: 'testing' stamp: '7/11/2025 23:14'!canBeExecutedInContext: aToolContext	^aToolContext isMethodSelected.! !!MyHelloCopyCommand class methodsFor: 'testing' stamp: '7/12/2025 14:02'!fullBrowserMenuActivation	<classAnnotation>	"^CmdContextMenuActivation byItemOf: CmdExtraMenuGroup for: ClyFullBrowserMethodContext."	"OPTION 1: Put at root level (no submenu)"	^CmdContextMenuActivation byRootGroupItemFor: ClyFullBrowserMethodContext.! !!MyHelloCopyCommand class methodsFor: 'testing' stamp: '7/12/2025 14:16'!setDefaultUserName: aString	"Set the default user name that will be pre-filled in the dialog"	DefaultUserName := aString.! !!MyHelloCopyCommand class methodsFor: 'testing' stamp: '7/12/2025 14:16'!defaultUserName	"Get the currently stored default user name"	^DefaultUserName! !